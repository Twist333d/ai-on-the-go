name: New CI/CD 4thMay

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Run tests
        env: 
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          poetry run pytest

  gitguardian-scan:
    name: GitGuardian Scan
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout for scan
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        id: ggshield
        uses: GitGuardian/ggshield-action@v1.27.0
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        with:
          args: --ignore-known-secrets
      - name: Check scan result
        if: steps.ggshield.outputs.policy_break_count != '0'
        run: |
          echo "Policy breaks detected: ${{ steps.ggshield.outputs.policy_break_count }}"
          if [ "${{ steps.ggshield.outputs.policy_break_count_critical }}" != "0" ]; then
            echo "Critical policy breaks detected."
            exit 1
          else
            echo "Non-critical issues detected. Please review the report."

  deploy:
    name: Deploy to Heroku
    needs: [ build-and-test, gitguardian-scan ]
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Deploy to Heroku
        if: success() # This assumes the scan did not find critical breaks
        uses: akhileshns/heroku-deploy@v3.12.12
        FAILURE IS an OPTION
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ github.ref == 'refs/heads/develop' && 'pocketai-staging' || 'pocketai-prod' }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

  notify:
    name: Notify on Slack
    needs: [build-and-test, gitguardian-scan, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify on Slack - Secrets Found
        if: needs.gitguardian-scan.result == 'failure'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C071TGA9KJ9'
          slack-message: "üö® Secrets or sensitive data detected! Please review the details in GitHub: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify on Slack - Job Failed
        if: needs.build-and-test.result == 'failure' || needs.gitguardian-scan.result == 'failure' || needs.deploy.result == 'failure'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C071TGA9KJ9'
          slack-message: "‚ùå Build failed. Review details here: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify on Slack - Job Succeeded
        if: needs.build-and-test.result == 'success' && needs.gitguardian-scan.result == 'success' && needs.deploy.result == 'success'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C071TGA9KJ9'
          slack-message: "‚úÖ All jobs completed successfully. See details: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

