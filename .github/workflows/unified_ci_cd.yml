name: Unified CI/CD Pipeline with GitGuardian Scan

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run tests
        run: |
          poetry run pytest

  gitguardian-scan:
    name: GitGuardian Scan
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout for scan
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      - name: GitGuardian scan
        id: ggshield
        uses: GitGuardian/ggshield-action@v1.27.0
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
        with:
          args: --ignore-known-secrets
      - name: Check scan result
        if: steps.ggshield.outputs.policy_break_count != '0'
        run: |
          echo "Policy breaks detected: ${{ steps.ggshield.outputs.policy_break_count }}"
          if [ "${{ steps.ggshield.outputs.policy_break_count_critical }}" != "0" ]; then
            echo "Critical policy breaks detected."
            exit 1
          else
            echo "Non-critical issues detected. Please review the report."
      - name: Notify on Slack # Use this section for Slack notifications
        id: slack
        if: steps.ggshield.outputs.policy_break_count != '0' && steps.ggshield.outputs.policy_break_count_critical == '0'
        uses: slackapi/slack-github-action@v1.26.0 # slack action
        with:
          channel-id: 'C071TGA9KJ9'
          slack-message: "Non-critical secrets or sensitive data might have been detected in your push. Please review."
        env: 
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    name: Deploy to Heroku
    needs: [build-and-test, gitguardian-scan]
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Heroku
        if: needs.gitguardian-scan.outputs.policy_break_count_critical == '0'
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ github.ref == 'refs/heads/develop' && 'pocketai-staging' || 'pocketai-prod' }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

